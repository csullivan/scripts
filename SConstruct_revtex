#-*- python -*-

import os
import os.path
import shutil

#Where are the libraries found.
env = Environment(ENV=os.environ)
env['ENV']['TEXMFHOME'] = os.path.join(os.environ['HOME'],'texmf')

#Because expansions are nice to have.
def expand(path):
    return os.path.expanduser(os.path.expandvars(path))

def singlefile(env,path,filename):
    fullname = os.path.join(path,filename)
    incpath = os.path.join(path,filename.replace('.tex','_inc'))
    pdf = env.PDF(fullname)
    #Things in the dependency folder are dependencies.
    #If they are .py files, then they are to be run.
    if os.path.isdir(incpath):
        for include in os.listdir(incpath):
            if include[0]=='.':
                continue
            fullinclude = os.path.join(incpath,include)
            _, ext = os.path.splitext(include)
            if ext=='.py':
                env.Depends(pdf,
                            env.Command(fullinclude+'run',fullinclude,
                                        'cd {0}; python {1} && date > {1}run'.format(incpath,include)))
            elif ext=='.pyrun':
                pass
            else:
                env.Depends(pdf,fullinclude)
    #Find the output directory.
    first_line = open(fullname).readline().strip()
    if first_line.startswith('% outputDir:'):
        outputDir = expand(first_line[12:].strip())
    else:
        try:
            outputDir = expand(open(os.path.join(path,'outputDir')).read().strip())
        except IOError:
            outputDir = None
    #Install to the output directory.
    #Also, make a few dummy targets so that scons will install it,
    # since the installation is into a different directory.
    if outputDir:
        inst = env.Install(outputDir,pdf)
        env.Command(os.path.join(path,'.'+filename+'made'),inst,'touch $TARGET')
        if os.path.isdir(incpath):
            env.Command(os.path.join(incpath,'.'+filename+'made'),inst,'touch $TARGET')
def inc_revtex():
    bibtexsrc = '/user/sullivan/My Documents/files/programs/LaTeX/REVTEX/revtex4-1/bibtex/bst/revtex/'
    revtexsrc = '/user/sullivan/My Documents/files/programs/LaTeX/REVTEX/revtex4-1/tex/latex/revtex/'
    dest = '.'
    bib_src_files = os.listdir(bibtexsrc)
    rev_src_files = os.listdir(revtexsrc)
    for file_name in bib_src_files:
        full_file_name = os.path.join(bibtexsrc,file_name)
        if (os.path.isfile(full_file_name)):
            shutil.copy(full_file_name, dest)
    for file_name in rev_src_files:
        full_file_name = os.path.join(revtexsrc,file_name)
        if (os.path.isfile(full_file_name)):
            shutil.copy(full_file_name, dest)
def rm_revtex():
    bibtexsrc = '/user/sullivan/My Documents/files/programs/LaTeX/REVTEX/revtex4-1/bibtex/bst/revtex/'
    revtexsrc = '/user/sullivan/My Documents/files/programs/LaTeX/REVTEX/revtex4-1/tex/latex/revtex/'
    dest = '.'
    bib_src_files = os.listdir(bibtexsrc)
    rev_src_files = os.listdir(revtexsrc)
    for file_name in bib_src_files:
        full_file_name = os.path.join('./',file_name)
        if (os.path.isfile(full_file_name)):
            os.remove(full_file_name)
            print full_file_name
    for file_name in rev_src_files:
        full_file_name = os.path.join('./',file_name)
        if (os.path.isfile(full_file_name)):
            os.remove(full_file_name)
            print full_file_name


inc_revtex()
for path,directory,files in os.walk(os.curdir):
    for f in files:
        if f.endswith('.tex') and not f.startswith('.') and 'sullivan' not in f and 'noji' not in f:
            singlefile(env,path,f)
rm_revtex()
